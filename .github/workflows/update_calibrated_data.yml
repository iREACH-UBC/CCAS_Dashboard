name: Update Calibrated Sensor Data

on:
  workflow_run:
    workflows: ["Update Sensor Data"]
    types: [completed]
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  RENV_PATHS_CACHE: ~/.local/share/renv        # cache location

jobs:
# ─────────────────────────────────────────── RAMP ────────────────────────────
  calibrate-ramp:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - uses: actions/checkout@v4

      # 2. Cache the renv package store (keyed on renv.lock hash)
      - name: Cache renv package store
        uses: actions/cache@v4
        with:
          path: ${{ env.RENV_PATHS_CACHE }}
          key:  ${{ runner.os }}-renv-${{ hashFiles('renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-

      # 3. Set up R
      - uses: r-lib/actions/setup-r@v2

      # 4. Restore packages exactly as in renv.lock
      - name: renv restore
        run: |
          Rscript -e 'if (!requireNamespace("renv", quietly = TRUE))
                         install.packages("renv", repos = "https://cloud.r-project.org")'
          Rscript -e 'renv::restore(prompt = FALSE)'

      # 5. Run the calibration script
      - name: Run RAMP calibration
        run: Rscript scripts/calibrate_data.R

      # 6. Commit & push calibrated CSVs
      - name: Commit & push calibrated data (RAMP)
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "github-actions@github.com"
          git add calibrated_data/**/*.csv || true
          git commit -m "Automated RAMP calibrated data update at $(date -u)" || echo "No RAMP changes to commit"
          for i in {1..5}; do
            git pull --rebase origin main && git push origin main && break
            sleep 5
          done

# ─────────────────────────────────────────── QAQ  (unchanged) ────────────────
  calibrate-qaq:
    runs-on: ubuntu-latest
    needs: calibrate-ramp          # remove if parallel execution is fine

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true

      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Python dependencies
        run: |
          pip install pandas pytz

      - name: Run QAQ calibration script
        run: python scripts/calibrate_qaq.py

      - name: Commit & push calibrated data (QAQ)
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "github-actions@github.com"
          git add calibrated_data/**/*.csv || true
          git commit -m "Automated QAQ calibrated data update at $(date -u)" || echo "No QAQ changes to commit"
          for i in {1..5}; do
            git pull --rebase origin main && git push origin main && break
            sleep 5
          done
