name: Update Calibrated Sensor Data

on:
  workflow_run:
    workflows: ["Update Sensor Data"]
    types: [completed]

  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  R_LIBS_USER: ${{ github.workspace }}/.Rlib
  RENV_CONFIG_AUTOLOADER_ENABLED: "FALSE"
  RSPM: "https://packagemanager.posit.co/cran/__linux__/jammy/latest"

jobs:
# ───────────────────────── RAMP job (R) ─────────────────────────
  calibrate-ramp:
    runs-on: ubuntu-latest

    steps:
      # 1 Checkout repository + LFS binaries
      - uses: actions/checkout@v4
        with:
          lfs: true
          persist-credentials: true

      # 2 Cache R package library
      - uses: actions/cache@v4
        with:
          path: ${{ env.R_LIBS_USER }}
          key:  ${{ runner.os }}-r-lib-${{ hashFiles('scripts/calibrate_data.R') }}
          restore-keys: ${{ runner.os }}-r-lib-

      # 3 Install R
      - uses: r-lib/actions/setup-r@v2

      # 4 Install required R packages (now includes gtools)
      - name: Install R packages
        run: |
          Rscript -e '
            pkgs <- c("dplyr","readr","lubridate","stringr","purrr","tibble",
                      "fs","zoo","openair","glue","randomForest",
                      "caret","gtools", "tidyr")
            missing <- setdiff(pkgs, rownames(installed.packages()))
            if (length(missing))
              install.packages(missing,
                               repos = Sys.getenv("RSPM"),
                               quiet = TRUE)
          '

      # 5 Run calibration script
      - name: Run RAMP calibration
        run: Rscript scripts/calibrate_data.R

      # 6 Commit & push updated CSVs
      - name: Commit & push calibrated data (RAMP)
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "github-actions@github.com"
          git add calibrated_data/**/*.csv || true
          git commit -m "Automated RAMP calibrated data update at $(date -u)" || echo "No RAMP changes to commit"
          for i in {1..5}; do
            git pull --rebase origin main && git push origin main && break
            sleep 5
          done

# ───────────────────────── QAQ job (Python) ─────────────────────
  calibrate-qaq:
    runs-on: ubuntu-latest
    needs: calibrate-ramp

    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          persist-credentials: true

      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Python dependencies
        run: pip install pandas pytz

      - name: Run QAQ calibration script
        run: python scripts/calibrate_qaq.py

      - name: Commit & push calibrated data (QAQ)
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "github-actions@github.com"
          git add calibrated_data/**/*.csv || true
          git commit -m "Automated QAQ calibrated data update at $(date -u)" || echo "No QAQ changes to commit"
          for i in {1..5}; do
            git pull --rebase origin main && git push origin main && break
            sleep 5
          done
