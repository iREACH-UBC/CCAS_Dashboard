name: Update Calibrated Sensor Data

on:
  # Fire automatically when the “Update Sensor Data” workflow finishes
  workflow_run:
    workflows: ["Update Sensor Data"]
    types: [completed]

  # Allow manual runs from the GitHub UI
  workflow_dispatch:

# ────────────────────────────────────────────────────────────
# RAMP job   — runs R script scripts/calibrate_data.R
# QAQ  job   — remains your original Python workflow
# renv       — disabled on CI via env var so installs are fast
# ────────────────────────────────────────────────────────────
jobs:
# ----------------------------------------------------------------
# RAMP  (R‐based)
# ----------------------------------------------------------------
  calibrate-ramp:
    runs-on: ubuntu-latest
    env:
      # Disable renv autoloader so we only install the handful of pkgs we need
      RENV_CONFIG_AUTOLOADER_ENABLED: "FALSE"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      - name: Install R packages
        run: |
          Rscript -e 'install.packages(c(
            "tidyverse","fs","zoo","openair","glue",
            "randomForest","lubridate","readr","tibble",
            "stringr","purrr"),
            repos = "https://cloud.r-project.org",
            quiet = TRUE
          )'

      - name: Run RAMP calibration
        run: Rscript scripts/calibrate_data.R

      - name: Commit & push calibrated data (RAMP)
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "github-actions@github.com"
          git add calibrated_data/**/*.csv || true
          git commit -m "Automated RAMP calibrated data update at $(date -u)" || echo "No changes to commit"
          for i in {1..5}; do
            git pull --rebase origin main && git push origin main && break
            sleep 5
          done

# ----------------------------------------------------------------
# QAQ  (Python‐based) — unchanged from your original YAML
# ----------------------------------------------------------------
  calibrate-qaq:
    runs-on: ubuntu-latest
    needs: calibrate-ramp          # remove this line if the jobs may run in parallel

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Python dependencies
        run: |
          pip install pandas pytz

      - name: Run QAQ calibration script
        run: python scripts/calibrate_qaq.py

      - name: Commit & push calibrated data (QAQ)
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "github-actions@github.com"
          git add calibrated_data/**/*.csv || true
          git commit -m "Automated QAQ calibrated data update at $(date -u)" || echo "No changes to commit"
          for i in {1..5}; do
            git pull --rebase origin main && git push origin main && break
            sleep 5
          done
