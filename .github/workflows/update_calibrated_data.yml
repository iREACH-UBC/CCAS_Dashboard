# ───────────────────────── RAMP job (R) ─────────────────────────
  calibrate-ramp:
    runs-on: ubuntu-latest

    # one runner per sensor-ID
    strategy:
      matrix:
        sid: [2021, 2022, 2023, 2024, 2026, 2030, 2031]   # ← add/remove IDs here
      fail-fast: false

    steps:
      # 1 ▸ repo + LFS
      - uses: actions/checkout@v4
        with:
          lfs: true
          persist-credentials: true

      # 2 ▸ cache R libs
      - uses: actions/cache@v4
        with:
          path: ${{ env.R_LIBS_USER }}
          key:  ${{ runner.os }}-r-lib-${{ hashFiles('scripts/calibrate_data.R') }}
          restore-keys: ${{ runner.os }}-r-lib-

      # 3 ▸ R + system deps
      - uses: r-lib/actions/setup-r@v2

      - name: Install R packages
        run: |
          Rscript -e '
            pkgs <- c("dplyr","readr","lubridate","stringr","purrr","tibble",
                      "fs","zoo","openair","glue","randomForest",
                      "caret","gtools","tidyr","aws.s3")
            to_get <- setdiff(pkgs, rownames(installed.packages()))
            if (length(to_get))
              install.packages(to_get, repos = Sys.getenv("RSPM"), quiet = TRUE)
          '

      # 4 ▸ temp dir for this job
      - name: Create temp dir
        id: mktemp
        run: echo "TMP_DIR=$(mktemp -d)" >> "$GITHUB_ENV"

      # 5 ▸ download the model for this sensor-ID
      - name: Pull model for ${{ matrix.sid }}
        env:
          R2_ACCOUNT_ID:  ${{ secrets.R2_ACCOUNT_ID }}
          R2_BUCKET:      outdoor-calibrations
          R2_OBJ_KEY:     ${{ matrix.sid }}/Calibration_Models.obj
          DEST_PATH:      ${{ env.TMP_DIR }}
        run: |
          chmod +x scripts/download_r2_obj.sh
          ./scripts/download_r2_obj.sh               # sets CAL_MODEL_PATH env

      # 6 ▸ run the calibration pipeline
      - name: Calibrate ${{ matrix.sid }}
        run: |
          Rscript scripts/calibrate_data.R "${{ matrix.sid }}"

      # 7 ▸ commit / push any new CSVs
      - name: Commit & push calibrated data (${{ matrix.sid }})
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "github-actions@github.com"
          git add calibrated_data/${{ matrix.sid }}/*.csv || true
          git commit -m "Automated RAMP ${{
                        matrix.sid }} calibration at $(date -u)" || echo "No changes"
          for i in {1..5}; do
            git pull --rebase origin main && git push origin main && break
            sleep 5
          done
